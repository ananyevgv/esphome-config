# https://dzen.ru/a/Zc2dhriN9Wih4KDH
# https://developer.tuya.com/en/docs/iot/cbu-module-datasheet?id=Ka07pykl5dk4u
##########################################
##                 CBU                  ##
##  |P14|          |#|            |P15| ##
##  |P16|          |#|            |P17| ##
##  |P20| relay_3  |#|            | P9| ##
##  |P22| relay_2  |#|   CEN      |CEN| ##
##  |ADC|          |#|            |P28| ##
##  |RX2|          |#| bl0942     |RX1| ##
##  |TX2|          |#| bl0942     |TX1| ## 
##--------------------------------------##
##|P8| |P7| |P6| |P26| |P24| |GND| |3V3|##
##  R   R     L    R      B             ##
##  e   e     e    e      u             ##
##  l   l     d    l      t             ##
##  a   a          a      t             ##
##  y   y          y      o             ##
##  4   1          5      n             ##
##########################################

##########################################
##               ESP8685 (C3)           ##
##  |IO8 |          |#|            |IO1| ##
##  |IO9 |          |#|            |IO2| ##
##  |IO10| relay_3  |#|            |NC | ##
##  |EN  | relay_2  |#|            |NC | ##
##  |NC  |          |#|            |IO0| ##
##  |IO19|          |#| bl0942     |RX1| ##
##  |IO18|          |#| bl0942     |TX1| ## 
##--------------------------------------##
##| 2| | 7| | 6| |  4|  |  5| |GND| |3V3|##
##  R   R     L    R      B             ##
##  e   e     e    e      u             ##
##  l   l     d    l      t             ##
##  a   a          a      t             ##
##  y   y          y      o             ##
##  4   1          5      n             ##
##########################################
substitutions:
  name: ekf-rce-2
  friendly_name: Умный удлинитель

esphome:
  name: ${name}
  comment: "${friendly_name}"
  on_boot:
    then:
      - script.execute: check_relays_state

bk72xx:
  board: generic-bk7231n-qfn32-tuya #cbu
 # board: esp32-c3-devkitm-1
 # variant: Esp32C3

# Enable logging
logger:
   baud_rate: 0
# Enable Home Assistant API бля
api:
  password: !secret api_pass
#Включаем загрузку по воздуху
ota:
  password: !secret ota_pass
  platform: esphome



wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${name} IP Address"
      icon: mdi:ip
    ssid:
      name: "${name} SSID"
      icon: mdi:access-point-network
    mac_address:
      name: "${name} Mac"
      icon: mdi:lan

uart:
  id: uart_bus # BL0942
  tx_pin: P11
  rx_pin: P10
  baud_rate: 4800
  stop_bits: 1

globals:
  - id: is_relays_on
    type: bool
    restore_value: no
    initial_value: "false"

light:
  - platform: status_led
    name: ${name}_wifi_led
    id: wifi_led
    pin:
      number: P6
      inverted: true
    internal: false

switch:
  - platform: gpio
    id: relay_1
    name: ${name}_relay_1
    icon: mdi:power-socket-eu
    pin: P7
    on_turn_on:
      - script.execute: check_relays_state
    on_turn_off:
      - script.execute: check_relays_state
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: relay_2
    name: ${name}_relay_2
    icon: mdi:power-socket-eu
    pin: P22
    on_turn_on:
      - script.execute: check_relays_state
    on_turn_off:
      - script.execute: check_relays_state
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: relay_3
    name: ${name}_relay_3
    icon: mdi:power-socket-eu
    pin: P20
    on_turn_on:
      - script.execute: check_relays_state
    on_turn_off:
      - script.execute: check_relays_state
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: relay_4
    name: ${name}_relay_4
    icon: mdi:power-socket-eu
    pin: P8
    on_turn_on:
      - script.execute: check_relays_state
    on_turn_off:
      - script.execute: check_relays_state
    restore_mode: RESTORE_DEFAULT_OFF
  - platform: gpio
    id: relay_5
    name: ${name}_relay_5
    icon: mdi:usb
    pin: P26
    on_turn_on:
      - script.execute: check_relays_state
    on_turn_off:
      - script.execute: check_relays_state
    restore_mode: RESTORE_DEFAULT_OFF

binary_sensor:
  - platform: gpio
    id: toggle_all_relays_bin_sensor
    name: toggle_all_relays_bin_sensor
    device_class: plug
    internal: true
    pin:
      number: P24
      inverted: true
      mode: INPUT_PULLDOWN
    filters:
      - delayed_off: 10ms
    on_press:
      then:
        - lambda: |-  
            if (id(is_relays_on) == true) {
              id(off_relays).execute();
            } else {
              id(on_relays).execute();
            }

# бинарный сенсор по току
  - platform: analog_threshold
    name: "${name} current overload"
    sensor_id: current
    device_class: problem
    threshold: 16
    id: current_overload
    on_press:
      then:
        - lambda: |- 
            id(off_relays).execute();

# бинарный сенсор по напряжению
  - platform: analog_threshold
    name: "${name} voltage overload"
    sensor_id: voltage
    device_class: problem
    threshold: 253
    id: voltage_overload
    on_press:
      then:
        - lambda: |- 
            id(off_relays).execute();

script:
  - id: on_relays
    then:
      - switch.turn_on: relay_1
      - delay: 30ms
      - switch.turn_on: relay_2
      - delay: 30ms
      - switch.turn_on: relay_3
      - delay: 30ms
      - switch.turn_on: relay_4
      - delay: 30ms
      - switch.turn_on: relay_5
      - delay: 30ms
      - light.turn_on: wifi_led
  - id: off_relays
    then:
      - switch.turn_off: relay_1
      - delay: 30ms
      - switch.turn_off: relay_2
      - delay: 30ms
      - switch.turn_off: relay_3
      - delay: 30ms
      - switch.turn_off: relay_4
      - delay: 30ms
      - switch.turn_off: relay_5
      - delay: 30ms
      - light.turn_off: wifi_led
  - id: check_relays_state
    then:
      - if:
          condition:
            or:
              - switch.is_on: relay_1
              - switch.is_on: relay_2
              - switch.is_on: relay_3
              - switch.is_on: relay_4
              - switch.is_on: relay_5
          then:
            - lambda: "id(is_relays_on) = true;"
            - light.turn_on: wifi_led
          else:
            - lambda: "id(is_relays_on) = false;"
            - light.turn_off: wifi_led

button:
  - platform: template
    id: toggle_relays_btn
    name: ${name}_toggle_relays_btn
    icon: mdi:toggle-switch
    on_press:
      then:
        - lambda: |-  
            if (id(is_relays_on) == true) {
              id(off_relays).execute();
            } else {
              id(on_relays).execute();
            }
  - platform: restart
    name: ${name}_restart


sensor:
  - platform: wifi_signal
    name: "${name} Wifi"
    update_interval: 60s  
    id: wifi_signal_db
    entity_category: "diagnostic"
  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "${name} WiFi Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    
  - platform: bl0942
    uart_id: uart_bus
    voltage:
      id: voltage
      name: ${name}_voltage
    current:
      id: current
      name: ${name}_current
    power:
      id: power
      name: ${name}_power
      filters:
        multiply: -1
    energy:
      id: energy
      name: ${name}_energy
    frequency:
      id: frequency
      name: ${name}_frequency
      accuracy_decimals: 2
    update_interval: 15s

